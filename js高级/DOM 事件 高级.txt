1、注册事件

给元素添加事件，称为 注册事件 或者 绑定事件。
注册事件有两种方式：传统方式 和 方法监听注册 方式。

传统方式：同一个元素同一个事件只能设置一个处理函数, 最后注册的处理函数将会覆盖前面注册的处理函数（注册事件的唯一性）
方法监听注册：addEventListener () ，同一个元素同一个事件可以注册多个监听器

1.1、
事件监听方式：addEventListener 

eventTarget.addEventListener (type, listener [，useCapture] )
其中：
eventTarget ：目标对象
addEventListener：事件监听方式
type：事件类型字符串，比如 click 、mouseover，注意这里不要带on
listener：事件处理函数，事件发生时，会调用该监听函数
useCapture：可选参数，是一个布尔值，默认是false

如：
var but = document.querySelectorAll('buttom');
but[0].addEventListener ( 'click' , function() {
   alert('22');
} )

1.2、
事件监听方式（不提倡）：attachEvent

eventTarget.attachEvent (type, listener [，useCapture] )



2、事件删除

2.1、
传统删除方式（eventTarget.onclick = function(){} 的删除方式）

eventTarget.onclick = null ;

2.2、
事件监听删除方式（addEventListener 的删除方式）

eventTarget.removeEventListener (type, listener [，useCapture] )

2.3、
事件监听删除方式（attachEvent 的删除方式）

eventTarget.datachEvent(eventNameWithon, callback);



3、DOM 事件流

DOM 事件流：事件发生时会在元素节点之间按照特定的顺序传播，这个传播过程即DOM事件流

捕获阶段：document ~ html ~ body ~ div （从外往里）
冒泡阶段 div ~ body ~ html ~ document （从里往外）

注意：
JS代码中只能执行 捕获 或者 冒泡 其中的一个阶段。
传统的onclick 和 attachEvent 只能得到冒泡阶段。
addEventListener (type, listener [，useCapture] ) 的第3个参数如果是 true 则为捕获阶段，默认为 false 冒泡阶段。
有些事件是没有冒泡的，比如：onblur、onfocus、onmouseenter、onmouseleave



4、事件对象

4.1、
事件对象：监听函数的 小括号里的 当形参来看的

如：
var div = document.querySelector('div');
div.onclick = function(event) {}

event 就是一个事件对象写到我们侦听函数的小括号里面当形参来看
事件对象只有有了事件才会存在，它是系统给我们自动创建的，不需要我们传递参数
事件对象是我们事件的一系列相关数据的集合 跟事件相关的 比如鼠标点击里面就包含了鼠标的相关信息，鼠标坐标啊，如果是键盘事件里面就包含的键盘事件的信息比如判断用户按下了哪个键
这个事件对象我们可以自己命名比如 event 、evt、 e
事件对象也有兼容性问题 ie678 通过window. event 兼容性的写法 e = e || window.event ;

4.2、
常见的事件对象属性和方法

e.target
返回的是触发事件的对象（元素），和 this 不一样

e.type
返回的是触发的事件类型，不带 on 的

e.preventDefault()
阻止默认行为，比如跳转链接，选择字体。。。

阻止事件冒泡
e.stopPropagation()           //  stop 停止、Propagation 传播 



5、事件委托

原理：不是每个子节点单独设置事件监听器,而是事件监听器设置在其父节点上,然后利用冒泡原理影响设置每个子节点。



6、鼠标事件对象

e.screenX：返回鼠标相对于电脑屏幕的 X 坐标
e.screenY：返回鼠标相对于电脑屏幕的 Y 坐标
e.clientX：返回鼠标相对于浏览器窗口可视区的 X 坐标
e.clientY：返回鼠标相对于浏览器窗口可视区的 Y 坐标
e.pageX：返回鼠标相对于文档页面的 X 坐标 IE9+ 支持
e.pageY：返回鼠标相对于文档页面的 Y 坐标 IE9+ 支持
e.offsetX：返回鼠标相对于 dom 的 X 坐标
e.offsetY：返回鼠标相对于 dom 的 Y 坐标


7、键盘事件

onkeyup：某个键盘按键被松开时触发
onkeydown：某个键盘按键被按下时触发，一直按一直触发
onkeypress：某个键盘按键被按下时触发，但不识别功能按键，如：ctel 、shift

注意：如果有 onkeydown 也有 onkeypress 先执行 onkeydown



8、键盘事件对象

e.key：返回相应键字符（有很大的兼容性问题）
e.keyCode：返回相应键的 ASCII 值，onkeyup 和 onkeydown 不区分大小写，onkeypress 区分













