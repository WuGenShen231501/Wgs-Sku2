一、运算符（operator）：也称为 操作符



1、算术运算符
+(加)、-(减)、*(乘)、/(除)、%(取余 )       注：我们不能拿浮点数来进行比较是否相等（0.1 + 0.2 != 0.3）

1.2、表达式
表达式：由数字、运算符、变量等组成的式子
如：1+1

1.3、返回值
如：console.log(1 + 1);  // 2 就是返回值    （2=1+1）



2、递增和递减运算符 （注意：递增和低价运算符必须和变量配合使用）
递增（++）
递减（--）

（++变量）前置递增：++age  （ age = age + 1）                 
如：
var p = 10;
console.log(++p + 10);   // 21                                     

（变量++）后置递增：age++ （ age = age +1）           
如：
var p = 10;
console.log(p++ + 10);   // 20

不同：前置：先自加1 后返回原值
          后置：先返回原值 后自加1



3、比较运算符
<  小于
>  大于
<=  大于等于（大于或者等于）
>=  小于等于（小于或者等于）
==  判断号（会转型）                                          console.log(18 == '18');  //  true
!=  不等号
===  !==  全等 要求值和数据类型都一致              console.log(18 == '18');  //  false



4、逻辑运算符  （逻辑运算符是用来进行布尔值运算的运算符）

 &&  与

如：
console.log(3 > 5 && 3 > 2);   //   false
console.log(3 < 5 && 3 > 2);   //   trye

 ||      或

如：
console.log(3 > 5 || 3 > 2);   //   trye
console.log(3 > 5 || 3 < 2);   //   false

 ！    非

如：
console.log(!true);   //   false



5、逻辑中断（短路操作）

5.1、逻辑（与）短路运算
原理：当有多个表达式为值时，左边的表达式值为真时，输出右边的值，当左边的表达式为假时，输出左边的值

如：
console.log(123 && 456);   //   456
console.log(0 && 456);   //   0
console.log(0 && 1 + 2 && 456 * 56789);    //   0
console.log('' && 1 + 2 && 456 * 56789);    //   ''
（其中 0 ‘’ null undefined NaN 为假，其余为真）

5.2、逻辑（或）短路运算
原理：当有多个表达式为值时，左边的表达式值为真时，输出左边的值，当左边的表达式为假时，输出右边的值
如：
var num = 0;
console.log(123 || num++);
console.log(num);                      //   0       （逻辑中断，所有不再执行 num++）



6、赋值运算符
=                   直接赋值
如：
age = age + 5;

+=、-=         加、减一个 数 后赋值
如：
age += 5;    //   age = age + 5;

*=、/=、%= 乘、除、取模 后在赋值
如：
age *= 10;   //   age = age * 10;



7、运算符的优先级

1、 小括号：   ()
2、 一元运算符：++ 、 -- 、 ！
3、 算数运算符：先 */% 再 +-
4、 关系运算符：>、>=、<、<=
5、 相等运算符：==、!=、===、!==
6、 逻辑运算符：先 && 后 ||
7、 赋值运算符：=
8、 逗号运算符：，	  

8、
？：；
（函数）？（true时css） ：（false时css） ；







